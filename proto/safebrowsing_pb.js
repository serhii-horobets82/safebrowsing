// source: safebrowsing.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.mozilla.safebrowsing.Checksum', null, global);
goog.exportSymbol('proto.mozilla.safebrowsing.ChromeClientInfo', null, global);
goog.exportSymbol('proto.mozilla.safebrowsing.ChromeClientInfo.SafeBrowsingReportingPopulation', null, global);
goog.exportSymbol('proto.mozilla.safebrowsing.ClientInfo', null, global);
goog.exportSymbol('proto.mozilla.safebrowsing.CompressionType', null, global);
goog.exportSymbol('proto.mozilla.safebrowsing.Duration', null, global);
goog.exportSymbol('proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest', null, global);
goog.exportSymbol('proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest', null, global);
goog.exportSymbol('proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints', null, global);
goog.exportSymbol('proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse', null, global);
goog.exportSymbol('proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse', null, global);
goog.exportSymbol('proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.ResponseType', null, global);
goog.exportSymbol('proto.mozilla.safebrowsing.FindFullHashesRequest', null, global);
goog.exportSymbol('proto.mozilla.safebrowsing.FindFullHashesResponse', null, global);
goog.exportSymbol('proto.mozilla.safebrowsing.FindThreatMatchesRequest', null, global);
goog.exportSymbol('proto.mozilla.safebrowsing.FindThreatMatchesResponse', null, global);
goog.exportSymbol('proto.mozilla.safebrowsing.ListThreatListsResponse', null, global);
goog.exportSymbol('proto.mozilla.safebrowsing.PlatformType', null, global);
goog.exportSymbol('proto.mozilla.safebrowsing.RawHashes', null, global);
goog.exportSymbol('proto.mozilla.safebrowsing.RawIndices', null, global);
goog.exportSymbol('proto.mozilla.safebrowsing.RiceDeltaEncoding', null, global);
goog.exportSymbol('proto.mozilla.safebrowsing.ThreatEntry', null, global);
goog.exportSymbol('proto.mozilla.safebrowsing.ThreatEntryMetadata', null, global);
goog.exportSymbol('proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry', null, global);
goog.exportSymbol('proto.mozilla.safebrowsing.ThreatEntrySet', null, global);
goog.exportSymbol('proto.mozilla.safebrowsing.ThreatEntryType', null, global);
goog.exportSymbol('proto.mozilla.safebrowsing.ThreatHit', null, global);
goog.exportSymbol('proto.mozilla.safebrowsing.ThreatHit.ThreatSource', null, global);
goog.exportSymbol('proto.mozilla.safebrowsing.ThreatHit.ThreatSourceType', null, global);
goog.exportSymbol('proto.mozilla.safebrowsing.ThreatInfo', null, global);
goog.exportSymbol('proto.mozilla.safebrowsing.ThreatListDescriptor', null, global);
goog.exportSymbol('proto.mozilla.safebrowsing.ThreatMatch', null, global);
goog.exportSymbol('proto.mozilla.safebrowsing.ThreatType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mozilla.safebrowsing.ThreatInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mozilla.safebrowsing.ThreatInfo.repeatedFields_, null);
};
goog.inherits(proto.mozilla.safebrowsing.ThreatInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mozilla.safebrowsing.ThreatInfo.displayName = 'proto.mozilla.safebrowsing.ThreatInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mozilla.safebrowsing.ThreatMatch = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mozilla.safebrowsing.ThreatMatch, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mozilla.safebrowsing.ThreatMatch.displayName = 'proto.mozilla.safebrowsing.ThreatMatch';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mozilla.safebrowsing.FindThreatMatchesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mozilla.safebrowsing.FindThreatMatchesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mozilla.safebrowsing.FindThreatMatchesRequest.displayName = 'proto.mozilla.safebrowsing.FindThreatMatchesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mozilla.safebrowsing.FindThreatMatchesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mozilla.safebrowsing.FindThreatMatchesResponse.repeatedFields_, null);
};
goog.inherits(proto.mozilla.safebrowsing.FindThreatMatchesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mozilla.safebrowsing.FindThreatMatchesResponse.displayName = 'proto.mozilla.safebrowsing.FindThreatMatchesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.repeatedFields_, null);
};
goog.inherits(proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.displayName = 'proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.displayName = 'proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints.repeatedFields_, null);
};
goog.inherits(proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints.displayName = 'proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.repeatedFields_, null);
};
goog.inherits(proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.displayName = 'proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.repeatedFields_, null);
};
goog.inherits(proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.displayName = 'proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mozilla.safebrowsing.FindFullHashesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mozilla.safebrowsing.FindFullHashesRequest.repeatedFields_, null);
};
goog.inherits(proto.mozilla.safebrowsing.FindFullHashesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mozilla.safebrowsing.FindFullHashesRequest.displayName = 'proto.mozilla.safebrowsing.FindFullHashesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mozilla.safebrowsing.FindFullHashesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mozilla.safebrowsing.FindFullHashesResponse.repeatedFields_, null);
};
goog.inherits(proto.mozilla.safebrowsing.FindFullHashesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mozilla.safebrowsing.FindFullHashesResponse.displayName = 'proto.mozilla.safebrowsing.FindFullHashesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mozilla.safebrowsing.ThreatHit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mozilla.safebrowsing.ThreatHit.repeatedFields_, null);
};
goog.inherits(proto.mozilla.safebrowsing.ThreatHit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mozilla.safebrowsing.ThreatHit.displayName = 'proto.mozilla.safebrowsing.ThreatHit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mozilla.safebrowsing.ThreatHit.ThreatSource = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mozilla.safebrowsing.ThreatHit.ThreatSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mozilla.safebrowsing.ThreatHit.ThreatSource.displayName = 'proto.mozilla.safebrowsing.ThreatHit.ThreatSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mozilla.safebrowsing.ClientInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mozilla.safebrowsing.ClientInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mozilla.safebrowsing.ClientInfo.displayName = 'proto.mozilla.safebrowsing.ClientInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mozilla.safebrowsing.ChromeClientInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mozilla.safebrowsing.ChromeClientInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mozilla.safebrowsing.ChromeClientInfo.displayName = 'proto.mozilla.safebrowsing.ChromeClientInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mozilla.safebrowsing.Checksum = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mozilla.safebrowsing.Checksum, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mozilla.safebrowsing.Checksum.displayName = 'proto.mozilla.safebrowsing.Checksum';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mozilla.safebrowsing.ThreatEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mozilla.safebrowsing.ThreatEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mozilla.safebrowsing.ThreatEntry.displayName = 'proto.mozilla.safebrowsing.ThreatEntry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mozilla.safebrowsing.ThreatEntrySet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mozilla.safebrowsing.ThreatEntrySet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mozilla.safebrowsing.ThreatEntrySet.displayName = 'proto.mozilla.safebrowsing.ThreatEntrySet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mozilla.safebrowsing.RawIndices = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mozilla.safebrowsing.RawIndices.repeatedFields_, null);
};
goog.inherits(proto.mozilla.safebrowsing.RawIndices, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mozilla.safebrowsing.RawIndices.displayName = 'proto.mozilla.safebrowsing.RawIndices';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mozilla.safebrowsing.RawHashes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mozilla.safebrowsing.RawHashes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mozilla.safebrowsing.RawHashes.displayName = 'proto.mozilla.safebrowsing.RawHashes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mozilla.safebrowsing.RiceDeltaEncoding = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mozilla.safebrowsing.RiceDeltaEncoding, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mozilla.safebrowsing.RiceDeltaEncoding.displayName = 'proto.mozilla.safebrowsing.RiceDeltaEncoding';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mozilla.safebrowsing.ThreatEntryMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mozilla.safebrowsing.ThreatEntryMetadata.repeatedFields_, null);
};
goog.inherits(proto.mozilla.safebrowsing.ThreatEntryMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mozilla.safebrowsing.ThreatEntryMetadata.displayName = 'proto.mozilla.safebrowsing.ThreatEntryMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry.displayName = 'proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mozilla.safebrowsing.ThreatListDescriptor = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mozilla.safebrowsing.ThreatListDescriptor, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mozilla.safebrowsing.ThreatListDescriptor.displayName = 'proto.mozilla.safebrowsing.ThreatListDescriptor';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mozilla.safebrowsing.ListThreatListsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mozilla.safebrowsing.ListThreatListsResponse.repeatedFields_, null);
};
goog.inherits(proto.mozilla.safebrowsing.ListThreatListsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mozilla.safebrowsing.ListThreatListsResponse.displayName = 'proto.mozilla.safebrowsing.ListThreatListsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mozilla.safebrowsing.Duration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mozilla.safebrowsing.Duration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mozilla.safebrowsing.Duration.displayName = 'proto.mozilla.safebrowsing.Duration';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mozilla.safebrowsing.ThreatInfo.repeatedFields_ = [1,2,4,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mozilla.safebrowsing.ThreatInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.mozilla.safebrowsing.ThreatInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mozilla.safebrowsing.ThreatInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.ThreatInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    threatTypesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    platformTypesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    threatEntryTypesList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    threatEntriesList: jspb.Message.toObjectList(msg.getThreatEntriesList(),
    proto.mozilla.safebrowsing.ThreatEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mozilla.safebrowsing.ThreatInfo}
 */
proto.mozilla.safebrowsing.ThreatInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mozilla.safebrowsing.ThreatInfo;
  return proto.mozilla.safebrowsing.ThreatInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mozilla.safebrowsing.ThreatInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mozilla.safebrowsing.ThreatInfo}
 */
proto.mozilla.safebrowsing.ThreatInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.mozilla.safebrowsing.ThreatType} */ (reader.readEnum());
      msg.addThreatTypes(value);
      break;
    case 2:
      var value = /** @type {!proto.mozilla.safebrowsing.PlatformType} */ (reader.readEnum());
      msg.addPlatformTypes(value);
      break;
    case 4:
      var value = /** @type {!proto.mozilla.safebrowsing.ThreatEntryType} */ (reader.readEnum());
      msg.addThreatEntryTypes(value);
      break;
    case 3:
      var value = new proto.mozilla.safebrowsing.ThreatEntry;
      reader.readMessage(value,proto.mozilla.safebrowsing.ThreatEntry.deserializeBinaryFromReader);
      msg.addThreatEntries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mozilla.safebrowsing.ThreatInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mozilla.safebrowsing.ThreatInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mozilla.safebrowsing.ThreatInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.ThreatInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getThreatTypesList();
  if (f.length > 0) {
    writer.writeRepeatedEnum(
      1,
      f
    );
  }
  f = message.getPlatformTypesList();
  if (f.length > 0) {
    writer.writeRepeatedEnum(
      2,
      f
    );
  }
  f = message.getThreatEntryTypesList();
  if (f.length > 0) {
    writer.writeRepeatedEnum(
      4,
      f
    );
  }
  f = message.getThreatEntriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.mozilla.safebrowsing.ThreatEntry.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ThreatType threat_types = 1;
 * @return {!Array<!proto.mozilla.safebrowsing.ThreatType>}
 */
proto.mozilla.safebrowsing.ThreatInfo.prototype.getThreatTypesList = function() {
  return /** @type {!Array<!proto.mozilla.safebrowsing.ThreatType>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<!proto.mozilla.safebrowsing.ThreatType>} value
 * @return {!proto.mozilla.safebrowsing.ThreatInfo} returns this
 */
proto.mozilla.safebrowsing.ThreatInfo.prototype.setThreatTypesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!proto.mozilla.safebrowsing.ThreatType} value
 * @param {number=} opt_index
 * @return {!proto.mozilla.safebrowsing.ThreatInfo} returns this
 */
proto.mozilla.safebrowsing.ThreatInfo.prototype.addThreatTypes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mozilla.safebrowsing.ThreatInfo} returns this
 */
proto.mozilla.safebrowsing.ThreatInfo.prototype.clearThreatTypesList = function() {
  return this.setThreatTypesList([]);
};


/**
 * repeated PlatformType platform_types = 2;
 * @return {!Array<!proto.mozilla.safebrowsing.PlatformType>}
 */
proto.mozilla.safebrowsing.ThreatInfo.prototype.getPlatformTypesList = function() {
  return /** @type {!Array<!proto.mozilla.safebrowsing.PlatformType>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<!proto.mozilla.safebrowsing.PlatformType>} value
 * @return {!proto.mozilla.safebrowsing.ThreatInfo} returns this
 */
proto.mozilla.safebrowsing.ThreatInfo.prototype.setPlatformTypesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!proto.mozilla.safebrowsing.PlatformType} value
 * @param {number=} opt_index
 * @return {!proto.mozilla.safebrowsing.ThreatInfo} returns this
 */
proto.mozilla.safebrowsing.ThreatInfo.prototype.addPlatformTypes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mozilla.safebrowsing.ThreatInfo} returns this
 */
proto.mozilla.safebrowsing.ThreatInfo.prototype.clearPlatformTypesList = function() {
  return this.setPlatformTypesList([]);
};


/**
 * repeated ThreatEntryType threat_entry_types = 4;
 * @return {!Array<!proto.mozilla.safebrowsing.ThreatEntryType>}
 */
proto.mozilla.safebrowsing.ThreatInfo.prototype.getThreatEntryTypesList = function() {
  return /** @type {!Array<!proto.mozilla.safebrowsing.ThreatEntryType>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<!proto.mozilla.safebrowsing.ThreatEntryType>} value
 * @return {!proto.mozilla.safebrowsing.ThreatInfo} returns this
 */
proto.mozilla.safebrowsing.ThreatInfo.prototype.setThreatEntryTypesList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!proto.mozilla.safebrowsing.ThreatEntryType} value
 * @param {number=} opt_index
 * @return {!proto.mozilla.safebrowsing.ThreatInfo} returns this
 */
proto.mozilla.safebrowsing.ThreatInfo.prototype.addThreatEntryTypes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mozilla.safebrowsing.ThreatInfo} returns this
 */
proto.mozilla.safebrowsing.ThreatInfo.prototype.clearThreatEntryTypesList = function() {
  return this.setThreatEntryTypesList([]);
};


/**
 * repeated ThreatEntry threat_entries = 3;
 * @return {!Array<!proto.mozilla.safebrowsing.ThreatEntry>}
 */
proto.mozilla.safebrowsing.ThreatInfo.prototype.getThreatEntriesList = function() {
  return /** @type{!Array<!proto.mozilla.safebrowsing.ThreatEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mozilla.safebrowsing.ThreatEntry, 3));
};


/**
 * @param {!Array<!proto.mozilla.safebrowsing.ThreatEntry>} value
 * @return {!proto.mozilla.safebrowsing.ThreatInfo} returns this
*/
proto.mozilla.safebrowsing.ThreatInfo.prototype.setThreatEntriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.mozilla.safebrowsing.ThreatEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mozilla.safebrowsing.ThreatEntry}
 */
proto.mozilla.safebrowsing.ThreatInfo.prototype.addThreatEntries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.mozilla.safebrowsing.ThreatEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mozilla.safebrowsing.ThreatInfo} returns this
 */
proto.mozilla.safebrowsing.ThreatInfo.prototype.clearThreatEntriesList = function() {
  return this.setThreatEntriesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mozilla.safebrowsing.ThreatMatch.prototype.toObject = function(opt_includeInstance) {
  return proto.mozilla.safebrowsing.ThreatMatch.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mozilla.safebrowsing.ThreatMatch} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.ThreatMatch.toObject = function(includeInstance, msg) {
  var f, obj = {
    threatType: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    platformType: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    threatEntryType: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    threat: (f = msg.getThreat()) && proto.mozilla.safebrowsing.ThreatEntry.toObject(includeInstance, f),
    threatEntryMetadata: (f = msg.getThreatEntryMetadata()) && proto.mozilla.safebrowsing.ThreatEntryMetadata.toObject(includeInstance, f),
    cacheDuration: (f = msg.getCacheDuration()) && proto.mozilla.safebrowsing.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mozilla.safebrowsing.ThreatMatch}
 */
proto.mozilla.safebrowsing.ThreatMatch.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mozilla.safebrowsing.ThreatMatch;
  return proto.mozilla.safebrowsing.ThreatMatch.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mozilla.safebrowsing.ThreatMatch} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mozilla.safebrowsing.ThreatMatch}
 */
proto.mozilla.safebrowsing.ThreatMatch.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.mozilla.safebrowsing.ThreatType} */ (reader.readEnum());
      msg.setThreatType(value);
      break;
    case 2:
      var value = /** @type {!proto.mozilla.safebrowsing.PlatformType} */ (reader.readEnum());
      msg.setPlatformType(value);
      break;
    case 6:
      var value = /** @type {!proto.mozilla.safebrowsing.ThreatEntryType} */ (reader.readEnum());
      msg.setThreatEntryType(value);
      break;
    case 3:
      var value = new proto.mozilla.safebrowsing.ThreatEntry;
      reader.readMessage(value,proto.mozilla.safebrowsing.ThreatEntry.deserializeBinaryFromReader);
      msg.setThreat(value);
      break;
    case 4:
      var value = new proto.mozilla.safebrowsing.ThreatEntryMetadata;
      reader.readMessage(value,proto.mozilla.safebrowsing.ThreatEntryMetadata.deserializeBinaryFromReader);
      msg.setThreatEntryMetadata(value);
      break;
    case 5:
      var value = new proto.mozilla.safebrowsing.Duration;
      reader.readMessage(value,proto.mozilla.safebrowsing.Duration.deserializeBinaryFromReader);
      msg.setCacheDuration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mozilla.safebrowsing.ThreatMatch.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mozilla.safebrowsing.ThreatMatch.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mozilla.safebrowsing.ThreatMatch} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.ThreatMatch.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.mozilla.safebrowsing.ThreatType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {!proto.mozilla.safebrowsing.PlatformType} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {!proto.mozilla.safebrowsing.ThreatEntryType} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getThreat();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.mozilla.safebrowsing.ThreatEntry.serializeBinaryToWriter
    );
  }
  f = message.getThreatEntryMetadata();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.mozilla.safebrowsing.ThreatEntryMetadata.serializeBinaryToWriter
    );
  }
  f = message.getCacheDuration();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.mozilla.safebrowsing.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * optional ThreatType threat_type = 1;
 * @return {!proto.mozilla.safebrowsing.ThreatType}
 */
proto.mozilla.safebrowsing.ThreatMatch.prototype.getThreatType = function() {
  return /** @type {!proto.mozilla.safebrowsing.ThreatType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.mozilla.safebrowsing.ThreatType} value
 * @return {!proto.mozilla.safebrowsing.ThreatMatch} returns this
 */
proto.mozilla.safebrowsing.ThreatMatch.prototype.setThreatType = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mozilla.safebrowsing.ThreatMatch} returns this
 */
proto.mozilla.safebrowsing.ThreatMatch.prototype.clearThreatType = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.ThreatMatch.prototype.hasThreatType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PlatformType platform_type = 2;
 * @return {!proto.mozilla.safebrowsing.PlatformType}
 */
proto.mozilla.safebrowsing.ThreatMatch.prototype.getPlatformType = function() {
  return /** @type {!proto.mozilla.safebrowsing.PlatformType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.mozilla.safebrowsing.PlatformType} value
 * @return {!proto.mozilla.safebrowsing.ThreatMatch} returns this
 */
proto.mozilla.safebrowsing.ThreatMatch.prototype.setPlatformType = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mozilla.safebrowsing.ThreatMatch} returns this
 */
proto.mozilla.safebrowsing.ThreatMatch.prototype.clearPlatformType = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.ThreatMatch.prototype.hasPlatformType = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ThreatEntryType threat_entry_type = 6;
 * @return {!proto.mozilla.safebrowsing.ThreatEntryType}
 */
proto.mozilla.safebrowsing.ThreatMatch.prototype.getThreatEntryType = function() {
  return /** @type {!proto.mozilla.safebrowsing.ThreatEntryType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.mozilla.safebrowsing.ThreatEntryType} value
 * @return {!proto.mozilla.safebrowsing.ThreatMatch} returns this
 */
proto.mozilla.safebrowsing.ThreatMatch.prototype.setThreatEntryType = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mozilla.safebrowsing.ThreatMatch} returns this
 */
proto.mozilla.safebrowsing.ThreatMatch.prototype.clearThreatEntryType = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.ThreatMatch.prototype.hasThreatEntryType = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ThreatEntry threat = 3;
 * @return {?proto.mozilla.safebrowsing.ThreatEntry}
 */
proto.mozilla.safebrowsing.ThreatMatch.prototype.getThreat = function() {
  return /** @type{?proto.mozilla.safebrowsing.ThreatEntry} */ (
    jspb.Message.getWrapperField(this, proto.mozilla.safebrowsing.ThreatEntry, 3));
};


/**
 * @param {?proto.mozilla.safebrowsing.ThreatEntry|undefined} value
 * @return {!proto.mozilla.safebrowsing.ThreatMatch} returns this
*/
proto.mozilla.safebrowsing.ThreatMatch.prototype.setThreat = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mozilla.safebrowsing.ThreatMatch} returns this
 */
proto.mozilla.safebrowsing.ThreatMatch.prototype.clearThreat = function() {
  return this.setThreat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.ThreatMatch.prototype.hasThreat = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ThreatEntryMetadata threat_entry_metadata = 4;
 * @return {?proto.mozilla.safebrowsing.ThreatEntryMetadata}
 */
proto.mozilla.safebrowsing.ThreatMatch.prototype.getThreatEntryMetadata = function() {
  return /** @type{?proto.mozilla.safebrowsing.ThreatEntryMetadata} */ (
    jspb.Message.getWrapperField(this, proto.mozilla.safebrowsing.ThreatEntryMetadata, 4));
};


/**
 * @param {?proto.mozilla.safebrowsing.ThreatEntryMetadata|undefined} value
 * @return {!proto.mozilla.safebrowsing.ThreatMatch} returns this
*/
proto.mozilla.safebrowsing.ThreatMatch.prototype.setThreatEntryMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mozilla.safebrowsing.ThreatMatch} returns this
 */
proto.mozilla.safebrowsing.ThreatMatch.prototype.clearThreatEntryMetadata = function() {
  return this.setThreatEntryMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.ThreatMatch.prototype.hasThreatEntryMetadata = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Duration cache_duration = 5;
 * @return {?proto.mozilla.safebrowsing.Duration}
 */
proto.mozilla.safebrowsing.ThreatMatch.prototype.getCacheDuration = function() {
  return /** @type{?proto.mozilla.safebrowsing.Duration} */ (
    jspb.Message.getWrapperField(this, proto.mozilla.safebrowsing.Duration, 5));
};


/**
 * @param {?proto.mozilla.safebrowsing.Duration|undefined} value
 * @return {!proto.mozilla.safebrowsing.ThreatMatch} returns this
*/
proto.mozilla.safebrowsing.ThreatMatch.prototype.setCacheDuration = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mozilla.safebrowsing.ThreatMatch} returns this
 */
proto.mozilla.safebrowsing.ThreatMatch.prototype.clearCacheDuration = function() {
  return this.setCacheDuration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.ThreatMatch.prototype.hasCacheDuration = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mozilla.safebrowsing.FindThreatMatchesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mozilla.safebrowsing.FindThreatMatchesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mozilla.safebrowsing.FindThreatMatchesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.FindThreatMatchesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    client: (f = msg.getClient()) && proto.mozilla.safebrowsing.ClientInfo.toObject(includeInstance, f),
    threatInfo: (f = msg.getThreatInfo()) && proto.mozilla.safebrowsing.ThreatInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mozilla.safebrowsing.FindThreatMatchesRequest}
 */
proto.mozilla.safebrowsing.FindThreatMatchesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mozilla.safebrowsing.FindThreatMatchesRequest;
  return proto.mozilla.safebrowsing.FindThreatMatchesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mozilla.safebrowsing.FindThreatMatchesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mozilla.safebrowsing.FindThreatMatchesRequest}
 */
proto.mozilla.safebrowsing.FindThreatMatchesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mozilla.safebrowsing.ClientInfo;
      reader.readMessage(value,proto.mozilla.safebrowsing.ClientInfo.deserializeBinaryFromReader);
      msg.setClient(value);
      break;
    case 2:
      var value = new proto.mozilla.safebrowsing.ThreatInfo;
      reader.readMessage(value,proto.mozilla.safebrowsing.ThreatInfo.deserializeBinaryFromReader);
      msg.setThreatInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mozilla.safebrowsing.FindThreatMatchesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mozilla.safebrowsing.FindThreatMatchesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mozilla.safebrowsing.FindThreatMatchesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.FindThreatMatchesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClient();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mozilla.safebrowsing.ClientInfo.serializeBinaryToWriter
    );
  }
  f = message.getThreatInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mozilla.safebrowsing.ThreatInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional ClientInfo client = 1;
 * @return {?proto.mozilla.safebrowsing.ClientInfo}
 */
proto.mozilla.safebrowsing.FindThreatMatchesRequest.prototype.getClient = function() {
  return /** @type{?proto.mozilla.safebrowsing.ClientInfo} */ (
    jspb.Message.getWrapperField(this, proto.mozilla.safebrowsing.ClientInfo, 1));
};


/**
 * @param {?proto.mozilla.safebrowsing.ClientInfo|undefined} value
 * @return {!proto.mozilla.safebrowsing.FindThreatMatchesRequest} returns this
*/
proto.mozilla.safebrowsing.FindThreatMatchesRequest.prototype.setClient = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mozilla.safebrowsing.FindThreatMatchesRequest} returns this
 */
proto.mozilla.safebrowsing.FindThreatMatchesRequest.prototype.clearClient = function() {
  return this.setClient(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.FindThreatMatchesRequest.prototype.hasClient = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ThreatInfo threat_info = 2;
 * @return {?proto.mozilla.safebrowsing.ThreatInfo}
 */
proto.mozilla.safebrowsing.FindThreatMatchesRequest.prototype.getThreatInfo = function() {
  return /** @type{?proto.mozilla.safebrowsing.ThreatInfo} */ (
    jspb.Message.getWrapperField(this, proto.mozilla.safebrowsing.ThreatInfo, 2));
};


/**
 * @param {?proto.mozilla.safebrowsing.ThreatInfo|undefined} value
 * @return {!proto.mozilla.safebrowsing.FindThreatMatchesRequest} returns this
*/
proto.mozilla.safebrowsing.FindThreatMatchesRequest.prototype.setThreatInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mozilla.safebrowsing.FindThreatMatchesRequest} returns this
 */
proto.mozilla.safebrowsing.FindThreatMatchesRequest.prototype.clearThreatInfo = function() {
  return this.setThreatInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.FindThreatMatchesRequest.prototype.hasThreatInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mozilla.safebrowsing.FindThreatMatchesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mozilla.safebrowsing.FindThreatMatchesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mozilla.safebrowsing.FindThreatMatchesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mozilla.safebrowsing.FindThreatMatchesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.FindThreatMatchesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    matchesList: jspb.Message.toObjectList(msg.getMatchesList(),
    proto.mozilla.safebrowsing.ThreatMatch.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mozilla.safebrowsing.FindThreatMatchesResponse}
 */
proto.mozilla.safebrowsing.FindThreatMatchesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mozilla.safebrowsing.FindThreatMatchesResponse;
  return proto.mozilla.safebrowsing.FindThreatMatchesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mozilla.safebrowsing.FindThreatMatchesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mozilla.safebrowsing.FindThreatMatchesResponse}
 */
proto.mozilla.safebrowsing.FindThreatMatchesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mozilla.safebrowsing.ThreatMatch;
      reader.readMessage(value,proto.mozilla.safebrowsing.ThreatMatch.deserializeBinaryFromReader);
      msg.addMatches(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mozilla.safebrowsing.FindThreatMatchesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mozilla.safebrowsing.FindThreatMatchesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mozilla.safebrowsing.FindThreatMatchesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.FindThreatMatchesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatchesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mozilla.safebrowsing.ThreatMatch.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ThreatMatch matches = 1;
 * @return {!Array<!proto.mozilla.safebrowsing.ThreatMatch>}
 */
proto.mozilla.safebrowsing.FindThreatMatchesResponse.prototype.getMatchesList = function() {
  return /** @type{!Array<!proto.mozilla.safebrowsing.ThreatMatch>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mozilla.safebrowsing.ThreatMatch, 1));
};


/**
 * @param {!Array<!proto.mozilla.safebrowsing.ThreatMatch>} value
 * @return {!proto.mozilla.safebrowsing.FindThreatMatchesResponse} returns this
*/
proto.mozilla.safebrowsing.FindThreatMatchesResponse.prototype.setMatchesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mozilla.safebrowsing.ThreatMatch=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mozilla.safebrowsing.ThreatMatch}
 */
proto.mozilla.safebrowsing.FindThreatMatchesResponse.prototype.addMatches = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mozilla.safebrowsing.ThreatMatch, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mozilla.safebrowsing.FindThreatMatchesResponse} returns this
 */
proto.mozilla.safebrowsing.FindThreatMatchesResponse.prototype.clearMatchesList = function() {
  return this.setMatchesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    client: (f = msg.getClient()) && proto.mozilla.safebrowsing.ClientInfo.toObject(includeInstance, f),
    listUpdateRequestsList: jspb.Message.toObjectList(msg.getListUpdateRequestsList(),
    proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.toObject, includeInstance),
    chromeClientInfo: (f = msg.getChromeClientInfo()) && proto.mozilla.safebrowsing.ChromeClientInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest;
  return proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mozilla.safebrowsing.ClientInfo;
      reader.readMessage(value,proto.mozilla.safebrowsing.ClientInfo.deserializeBinaryFromReader);
      msg.setClient(value);
      break;
    case 3:
      var value = new proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest;
      reader.readMessage(value,proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.deserializeBinaryFromReader);
      msg.addListUpdateRequests(value);
      break;
    case 4:
      var value = new proto.mozilla.safebrowsing.ChromeClientInfo;
      reader.readMessage(value,proto.mozilla.safebrowsing.ChromeClientInfo.deserializeBinaryFromReader);
      msg.setChromeClientInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClient();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mozilla.safebrowsing.ClientInfo.serializeBinaryToWriter
    );
  }
  f = message.getListUpdateRequestsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.serializeBinaryToWriter
    );
  }
  f = message.getChromeClientInfo();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.mozilla.safebrowsing.ChromeClientInfo.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    threatType: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    platformType: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    threatEntryType: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    state: msg.getState_asB64(),
    constraints: (f = msg.getConstraints()) && proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest;
  return proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.mozilla.safebrowsing.ThreatType} */ (reader.readEnum());
      msg.setThreatType(value);
      break;
    case 2:
      var value = /** @type {!proto.mozilla.safebrowsing.PlatformType} */ (reader.readEnum());
      msg.setPlatformType(value);
      break;
    case 5:
      var value = /** @type {!proto.mozilla.safebrowsing.ThreatEntryType} */ (reader.readEnum());
      msg.setThreatEntryType(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setState(value);
      break;
    case 4:
      var value = new proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints;
      reader.readMessage(value,proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints.deserializeBinaryFromReader);
      msg.setConstraints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.mozilla.safebrowsing.ThreatType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {!proto.mozilla.safebrowsing.PlatformType} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {!proto.mozilla.safebrowsing.ThreatEntryType} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getConstraints();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints.prototype.toObject = function(opt_includeInstance) {
  return proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints.toObject = function(includeInstance, msg) {
  var f, obj = {
    maxUpdateEntries: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    maxDatabaseEntries: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    region: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    supportedCompressionsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints;
  return proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxUpdateEntries(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxDatabaseEntries(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    case 4:
      var value = /** @type {!proto.mozilla.safebrowsing.CompressionType} */ (reader.readEnum());
      msg.addSupportedCompressions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSupportedCompressionsList();
  if (f.length > 0) {
    writer.writeRepeatedEnum(
      4,
      f
    );
  }
};


/**
 * optional int32 max_update_entries = 1;
 * @return {number}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints.prototype.getMaxUpdateEntries = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints} returns this
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints.prototype.setMaxUpdateEntries = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints} returns this
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints.prototype.clearMaxUpdateEntries = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints.prototype.hasMaxUpdateEntries = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 max_database_entries = 2;
 * @return {number}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints.prototype.getMaxDatabaseEntries = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints} returns this
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints.prototype.setMaxDatabaseEntries = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints} returns this
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints.prototype.clearMaxDatabaseEntries = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints.prototype.hasMaxDatabaseEntries = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string region = 3;
 * @return {string}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints} returns this
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints.prototype.setRegion = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints} returns this
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints.prototype.clearRegion = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints.prototype.hasRegion = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated CompressionType supported_compressions = 4;
 * @return {!Array<!proto.mozilla.safebrowsing.CompressionType>}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints.prototype.getSupportedCompressionsList = function() {
  return /** @type {!Array<!proto.mozilla.safebrowsing.CompressionType>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<!proto.mozilla.safebrowsing.CompressionType>} value
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints} returns this
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints.prototype.setSupportedCompressionsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!proto.mozilla.safebrowsing.CompressionType} value
 * @param {number=} opt_index
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints} returns this
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints.prototype.addSupportedCompressions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints} returns this
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints.prototype.clearSupportedCompressionsList = function() {
  return this.setSupportedCompressionsList([]);
};


/**
 * optional ThreatType threat_type = 1;
 * @return {!proto.mozilla.safebrowsing.ThreatType}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.prototype.getThreatType = function() {
  return /** @type {!proto.mozilla.safebrowsing.ThreatType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.mozilla.safebrowsing.ThreatType} value
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest} returns this
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.prototype.setThreatType = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest} returns this
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.prototype.clearThreatType = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.prototype.hasThreatType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PlatformType platform_type = 2;
 * @return {!proto.mozilla.safebrowsing.PlatformType}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.prototype.getPlatformType = function() {
  return /** @type {!proto.mozilla.safebrowsing.PlatformType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.mozilla.safebrowsing.PlatformType} value
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest} returns this
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.prototype.setPlatformType = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest} returns this
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.prototype.clearPlatformType = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.prototype.hasPlatformType = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ThreatEntryType threat_entry_type = 5;
 * @return {!proto.mozilla.safebrowsing.ThreatEntryType}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.prototype.getThreatEntryType = function() {
  return /** @type {!proto.mozilla.safebrowsing.ThreatEntryType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.mozilla.safebrowsing.ThreatEntryType} value
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest} returns this
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.prototype.setThreatEntryType = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest} returns this
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.prototype.clearThreatEntryType = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.prototype.hasThreatEntryType = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bytes state = 3;
 * @return {!(string|Uint8Array)}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.prototype.getState = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes state = 3;
 * This is a type-conversion wrapper around `getState()`
 * @return {string}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.prototype.getState_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getState()));
};


/**
 * optional bytes state = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getState()`
 * @return {!Uint8Array}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.prototype.getState_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getState()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest} returns this
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.prototype.setState = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest} returns this
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.prototype.clearState = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.prototype.hasState = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Constraints constraints = 4;
 * @return {?proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.prototype.getConstraints = function() {
  return /** @type{?proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints} */ (
    jspb.Message.getWrapperField(this, proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints, 4));
};


/**
 * @param {?proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.Constraints|undefined} value
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest} returns this
*/
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.prototype.setConstraints = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest} returns this
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.prototype.clearConstraints = function() {
  return this.setConstraints(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest.prototype.hasConstraints = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ClientInfo client = 1;
 * @return {?proto.mozilla.safebrowsing.ClientInfo}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.prototype.getClient = function() {
  return /** @type{?proto.mozilla.safebrowsing.ClientInfo} */ (
    jspb.Message.getWrapperField(this, proto.mozilla.safebrowsing.ClientInfo, 1));
};


/**
 * @param {?proto.mozilla.safebrowsing.ClientInfo|undefined} value
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest} returns this
*/
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.prototype.setClient = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest} returns this
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.prototype.clearClient = function() {
  return this.setClient(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.prototype.hasClient = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ListUpdateRequest list_update_requests = 3;
 * @return {!Array<!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest>}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.prototype.getListUpdateRequestsList = function() {
  return /** @type{!Array<!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest, 3));
};


/**
 * @param {!Array<!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest>} value
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest} returns this
*/
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.prototype.setListUpdateRequestsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.prototype.addListUpdateRequests = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.ListUpdateRequest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest} returns this
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.prototype.clearListUpdateRequestsList = function() {
  return this.setListUpdateRequestsList([]);
};


/**
 * optional ChromeClientInfo chrome_client_info = 4;
 * @return {?proto.mozilla.safebrowsing.ChromeClientInfo}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.prototype.getChromeClientInfo = function() {
  return /** @type{?proto.mozilla.safebrowsing.ChromeClientInfo} */ (
    jspb.Message.getWrapperField(this, proto.mozilla.safebrowsing.ChromeClientInfo, 4));
};


/**
 * @param {?proto.mozilla.safebrowsing.ChromeClientInfo|undefined} value
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest} returns this
*/
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.prototype.setChromeClientInfo = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest} returns this
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.prototype.clearChromeClientInfo = function() {
  return this.setChromeClientInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesRequest.prototype.hasChromeClientInfo = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    listUpdateResponsesList: jspb.Message.toObjectList(msg.getListUpdateResponsesList(),
    proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.toObject, includeInstance),
    minimumWaitDuration: (f = msg.getMinimumWaitDuration()) && proto.mozilla.safebrowsing.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse;
  return proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse;
      reader.readMessage(value,proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.deserializeBinaryFromReader);
      msg.addListUpdateResponses(value);
      break;
    case 2:
      var value = new proto.mozilla.safebrowsing.Duration;
      reader.readMessage(value,proto.mozilla.safebrowsing.Duration.deserializeBinaryFromReader);
      msg.setMinimumWaitDuration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListUpdateResponsesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.serializeBinaryToWriter
    );
  }
  f = message.getMinimumWaitDuration();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mozilla.safebrowsing.Duration.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.repeatedFields_ = [5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    threatType: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    threatEntryType: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    platformType: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    responseType: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    additionsList: jspb.Message.toObjectList(msg.getAdditionsList(),
    proto.mozilla.safebrowsing.ThreatEntrySet.toObject, includeInstance),
    removalsList: jspb.Message.toObjectList(msg.getRemovalsList(),
    proto.mozilla.safebrowsing.ThreatEntrySet.toObject, includeInstance),
    newClientState: msg.getNewClientState_asB64(),
    checksum: (f = msg.getChecksum()) && proto.mozilla.safebrowsing.Checksum.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse;
  return proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.mozilla.safebrowsing.ThreatType} */ (reader.readEnum());
      msg.setThreatType(value);
      break;
    case 2:
      var value = /** @type {!proto.mozilla.safebrowsing.ThreatEntryType} */ (reader.readEnum());
      msg.setThreatEntryType(value);
      break;
    case 3:
      var value = /** @type {!proto.mozilla.safebrowsing.PlatformType} */ (reader.readEnum());
      msg.setPlatformType(value);
      break;
    case 4:
      var value = /** @type {!proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.ResponseType} */ (reader.readEnum());
      msg.setResponseType(value);
      break;
    case 5:
      var value = new proto.mozilla.safebrowsing.ThreatEntrySet;
      reader.readMessage(value,proto.mozilla.safebrowsing.ThreatEntrySet.deserializeBinaryFromReader);
      msg.addAdditions(value);
      break;
    case 6:
      var value = new proto.mozilla.safebrowsing.ThreatEntrySet;
      reader.readMessage(value,proto.mozilla.safebrowsing.ThreatEntrySet.deserializeBinaryFromReader);
      msg.addRemovals(value);
      break;
    case 7:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setNewClientState(value);
      break;
    case 8:
      var value = new proto.mozilla.safebrowsing.Checksum;
      reader.readMessage(value,proto.mozilla.safebrowsing.Checksum.deserializeBinaryFromReader);
      msg.setChecksum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.mozilla.safebrowsing.ThreatType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {!proto.mozilla.safebrowsing.ThreatEntryType} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {!proto.mozilla.safebrowsing.PlatformType} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {!proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.ResponseType} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getAdditionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.mozilla.safebrowsing.ThreatEntrySet.serializeBinaryToWriter
    );
  }
  f = message.getRemovalsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.mozilla.safebrowsing.ThreatEntrySet.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBytes(
      7,
      f
    );
  }
  f = message.getChecksum();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.mozilla.safebrowsing.Checksum.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.ResponseType = {
  RESPONSE_TYPE_UNSPECIFIED: 0,
  PARTIAL_UPDATE: 1,
  FULL_UPDATE: 2
};

/**
 * optional ThreatType threat_type = 1;
 * @return {!proto.mozilla.safebrowsing.ThreatType}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.prototype.getThreatType = function() {
  return /** @type {!proto.mozilla.safebrowsing.ThreatType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.mozilla.safebrowsing.ThreatType} value
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse} returns this
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.prototype.setThreatType = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse} returns this
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.prototype.clearThreatType = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.prototype.hasThreatType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ThreatEntryType threat_entry_type = 2;
 * @return {!proto.mozilla.safebrowsing.ThreatEntryType}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.prototype.getThreatEntryType = function() {
  return /** @type {!proto.mozilla.safebrowsing.ThreatEntryType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.mozilla.safebrowsing.ThreatEntryType} value
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse} returns this
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.prototype.setThreatEntryType = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse} returns this
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.prototype.clearThreatEntryType = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.prototype.hasThreatEntryType = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional PlatformType platform_type = 3;
 * @return {!proto.mozilla.safebrowsing.PlatformType}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.prototype.getPlatformType = function() {
  return /** @type {!proto.mozilla.safebrowsing.PlatformType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.mozilla.safebrowsing.PlatformType} value
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse} returns this
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.prototype.setPlatformType = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse} returns this
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.prototype.clearPlatformType = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.prototype.hasPlatformType = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ResponseType response_type = 4;
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.ResponseType}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.prototype.getResponseType = function() {
  return /** @type {!proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.ResponseType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.ResponseType} value
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse} returns this
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.prototype.setResponseType = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse} returns this
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.prototype.clearResponseType = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.prototype.hasResponseType = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated ThreatEntrySet additions = 5;
 * @return {!Array<!proto.mozilla.safebrowsing.ThreatEntrySet>}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.prototype.getAdditionsList = function() {
  return /** @type{!Array<!proto.mozilla.safebrowsing.ThreatEntrySet>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mozilla.safebrowsing.ThreatEntrySet, 5));
};


/**
 * @param {!Array<!proto.mozilla.safebrowsing.ThreatEntrySet>} value
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse} returns this
*/
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.prototype.setAdditionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.mozilla.safebrowsing.ThreatEntrySet=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mozilla.safebrowsing.ThreatEntrySet}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.prototype.addAdditions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.mozilla.safebrowsing.ThreatEntrySet, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse} returns this
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.prototype.clearAdditionsList = function() {
  return this.setAdditionsList([]);
};


/**
 * repeated ThreatEntrySet removals = 6;
 * @return {!Array<!proto.mozilla.safebrowsing.ThreatEntrySet>}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.prototype.getRemovalsList = function() {
  return /** @type{!Array<!proto.mozilla.safebrowsing.ThreatEntrySet>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mozilla.safebrowsing.ThreatEntrySet, 6));
};


/**
 * @param {!Array<!proto.mozilla.safebrowsing.ThreatEntrySet>} value
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse} returns this
*/
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.prototype.setRemovalsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.mozilla.safebrowsing.ThreatEntrySet=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mozilla.safebrowsing.ThreatEntrySet}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.prototype.addRemovals = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.mozilla.safebrowsing.ThreatEntrySet, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse} returns this
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.prototype.clearRemovalsList = function() {
  return this.setRemovalsList([]);
};


/**
 * optional bytes new_client_state = 7;
 * @return {!(string|Uint8Array)}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.prototype.getNewClientState = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * optional bytes new_client_state = 7;
 * This is a type-conversion wrapper around `getNewClientState()`
 * @return {string}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.prototype.getNewClientState_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getNewClientState()));
};


/**
 * optional bytes new_client_state = 7;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getNewClientState()`
 * @return {!Uint8Array}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.prototype.getNewClientState_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getNewClientState()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse} returns this
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.prototype.setNewClientState = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse} returns this
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.prototype.clearNewClientState = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.prototype.hasNewClientState = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Checksum checksum = 8;
 * @return {?proto.mozilla.safebrowsing.Checksum}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.prototype.getChecksum = function() {
  return /** @type{?proto.mozilla.safebrowsing.Checksum} */ (
    jspb.Message.getWrapperField(this, proto.mozilla.safebrowsing.Checksum, 8));
};


/**
 * @param {?proto.mozilla.safebrowsing.Checksum|undefined} value
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse} returns this
*/
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.prototype.setChecksum = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse} returns this
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.prototype.clearChecksum = function() {
  return this.setChecksum(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse.prototype.hasChecksum = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * repeated ListUpdateResponse list_update_responses = 1;
 * @return {!Array<!proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse>}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.prototype.getListUpdateResponsesList = function() {
  return /** @type{!Array<!proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse, 1));
};


/**
 * @param {!Array<!proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse>} value
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse} returns this
*/
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.prototype.setListUpdateResponsesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.prototype.addListUpdateResponses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.ListUpdateResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse} returns this
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.prototype.clearListUpdateResponsesList = function() {
  return this.setListUpdateResponsesList([]);
};


/**
 * optional Duration minimum_wait_duration = 2;
 * @return {?proto.mozilla.safebrowsing.Duration}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.prototype.getMinimumWaitDuration = function() {
  return /** @type{?proto.mozilla.safebrowsing.Duration} */ (
    jspb.Message.getWrapperField(this, proto.mozilla.safebrowsing.Duration, 2));
};


/**
 * @param {?proto.mozilla.safebrowsing.Duration|undefined} value
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse} returns this
*/
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.prototype.setMinimumWaitDuration = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse} returns this
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.prototype.clearMinimumWaitDuration = function() {
  return this.setMinimumWaitDuration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.FetchThreatListUpdatesResponse.prototype.hasMinimumWaitDuration = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mozilla.safebrowsing.FindFullHashesRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mozilla.safebrowsing.FindFullHashesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mozilla.safebrowsing.FindFullHashesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mozilla.safebrowsing.FindFullHashesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.FindFullHashesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    client: (f = msg.getClient()) && proto.mozilla.safebrowsing.ClientInfo.toObject(includeInstance, f),
    clientStatesList: msg.getClientStatesList_asB64(),
    threatInfo: (f = msg.getThreatInfo()) && proto.mozilla.safebrowsing.ThreatInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mozilla.safebrowsing.FindFullHashesRequest}
 */
proto.mozilla.safebrowsing.FindFullHashesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mozilla.safebrowsing.FindFullHashesRequest;
  return proto.mozilla.safebrowsing.FindFullHashesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mozilla.safebrowsing.FindFullHashesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mozilla.safebrowsing.FindFullHashesRequest}
 */
proto.mozilla.safebrowsing.FindFullHashesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mozilla.safebrowsing.ClientInfo;
      reader.readMessage(value,proto.mozilla.safebrowsing.ClientInfo.deserializeBinaryFromReader);
      msg.setClient(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addClientStates(value);
      break;
    case 3:
      var value = new proto.mozilla.safebrowsing.ThreatInfo;
      reader.readMessage(value,proto.mozilla.safebrowsing.ThreatInfo.deserializeBinaryFromReader);
      msg.setThreatInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mozilla.safebrowsing.FindFullHashesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mozilla.safebrowsing.FindFullHashesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mozilla.safebrowsing.FindFullHashesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.FindFullHashesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClient();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mozilla.safebrowsing.ClientInfo.serializeBinaryToWriter
    );
  }
  f = message.getClientStatesList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      2,
      f
    );
  }
  f = message.getThreatInfo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.mozilla.safebrowsing.ThreatInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional ClientInfo client = 1;
 * @return {?proto.mozilla.safebrowsing.ClientInfo}
 */
proto.mozilla.safebrowsing.FindFullHashesRequest.prototype.getClient = function() {
  return /** @type{?proto.mozilla.safebrowsing.ClientInfo} */ (
    jspb.Message.getWrapperField(this, proto.mozilla.safebrowsing.ClientInfo, 1));
};


/**
 * @param {?proto.mozilla.safebrowsing.ClientInfo|undefined} value
 * @return {!proto.mozilla.safebrowsing.FindFullHashesRequest} returns this
*/
proto.mozilla.safebrowsing.FindFullHashesRequest.prototype.setClient = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mozilla.safebrowsing.FindFullHashesRequest} returns this
 */
proto.mozilla.safebrowsing.FindFullHashesRequest.prototype.clearClient = function() {
  return this.setClient(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.FindFullHashesRequest.prototype.hasClient = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated bytes client_states = 2;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.mozilla.safebrowsing.FindFullHashesRequest.prototype.getClientStatesList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * repeated bytes client_states = 2;
 * This is a type-conversion wrapper around `getClientStatesList()`
 * @return {!Array<string>}
 */
proto.mozilla.safebrowsing.FindFullHashesRequest.prototype.getClientStatesList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getClientStatesList()));
};


/**
 * repeated bytes client_states = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getClientStatesList()`
 * @return {!Array<!Uint8Array>}
 */
proto.mozilla.safebrowsing.FindFullHashesRequest.prototype.getClientStatesList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getClientStatesList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.mozilla.safebrowsing.FindFullHashesRequest} returns this
 */
proto.mozilla.safebrowsing.FindFullHashesRequest.prototype.setClientStatesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.mozilla.safebrowsing.FindFullHashesRequest} returns this
 */
proto.mozilla.safebrowsing.FindFullHashesRequest.prototype.addClientStates = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mozilla.safebrowsing.FindFullHashesRequest} returns this
 */
proto.mozilla.safebrowsing.FindFullHashesRequest.prototype.clearClientStatesList = function() {
  return this.setClientStatesList([]);
};


/**
 * optional ThreatInfo threat_info = 3;
 * @return {?proto.mozilla.safebrowsing.ThreatInfo}
 */
proto.mozilla.safebrowsing.FindFullHashesRequest.prototype.getThreatInfo = function() {
  return /** @type{?proto.mozilla.safebrowsing.ThreatInfo} */ (
    jspb.Message.getWrapperField(this, proto.mozilla.safebrowsing.ThreatInfo, 3));
};


/**
 * @param {?proto.mozilla.safebrowsing.ThreatInfo|undefined} value
 * @return {!proto.mozilla.safebrowsing.FindFullHashesRequest} returns this
*/
proto.mozilla.safebrowsing.FindFullHashesRequest.prototype.setThreatInfo = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mozilla.safebrowsing.FindFullHashesRequest} returns this
 */
proto.mozilla.safebrowsing.FindFullHashesRequest.prototype.clearThreatInfo = function() {
  return this.setThreatInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.FindFullHashesRequest.prototype.hasThreatInfo = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mozilla.safebrowsing.FindFullHashesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mozilla.safebrowsing.FindFullHashesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mozilla.safebrowsing.FindFullHashesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mozilla.safebrowsing.FindFullHashesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.FindFullHashesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    matchesList: jspb.Message.toObjectList(msg.getMatchesList(),
    proto.mozilla.safebrowsing.ThreatMatch.toObject, includeInstance),
    minimumWaitDuration: (f = msg.getMinimumWaitDuration()) && proto.mozilla.safebrowsing.Duration.toObject(includeInstance, f),
    negativeCacheDuration: (f = msg.getNegativeCacheDuration()) && proto.mozilla.safebrowsing.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mozilla.safebrowsing.FindFullHashesResponse}
 */
proto.mozilla.safebrowsing.FindFullHashesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mozilla.safebrowsing.FindFullHashesResponse;
  return proto.mozilla.safebrowsing.FindFullHashesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mozilla.safebrowsing.FindFullHashesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mozilla.safebrowsing.FindFullHashesResponse}
 */
proto.mozilla.safebrowsing.FindFullHashesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mozilla.safebrowsing.ThreatMatch;
      reader.readMessage(value,proto.mozilla.safebrowsing.ThreatMatch.deserializeBinaryFromReader);
      msg.addMatches(value);
      break;
    case 2:
      var value = new proto.mozilla.safebrowsing.Duration;
      reader.readMessage(value,proto.mozilla.safebrowsing.Duration.deserializeBinaryFromReader);
      msg.setMinimumWaitDuration(value);
      break;
    case 3:
      var value = new proto.mozilla.safebrowsing.Duration;
      reader.readMessage(value,proto.mozilla.safebrowsing.Duration.deserializeBinaryFromReader);
      msg.setNegativeCacheDuration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mozilla.safebrowsing.FindFullHashesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mozilla.safebrowsing.FindFullHashesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mozilla.safebrowsing.FindFullHashesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.FindFullHashesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMatchesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mozilla.safebrowsing.ThreatMatch.serializeBinaryToWriter
    );
  }
  f = message.getMinimumWaitDuration();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mozilla.safebrowsing.Duration.serializeBinaryToWriter
    );
  }
  f = message.getNegativeCacheDuration();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.mozilla.safebrowsing.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ThreatMatch matches = 1;
 * @return {!Array<!proto.mozilla.safebrowsing.ThreatMatch>}
 */
proto.mozilla.safebrowsing.FindFullHashesResponse.prototype.getMatchesList = function() {
  return /** @type{!Array<!proto.mozilla.safebrowsing.ThreatMatch>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mozilla.safebrowsing.ThreatMatch, 1));
};


/**
 * @param {!Array<!proto.mozilla.safebrowsing.ThreatMatch>} value
 * @return {!proto.mozilla.safebrowsing.FindFullHashesResponse} returns this
*/
proto.mozilla.safebrowsing.FindFullHashesResponse.prototype.setMatchesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mozilla.safebrowsing.ThreatMatch=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mozilla.safebrowsing.ThreatMatch}
 */
proto.mozilla.safebrowsing.FindFullHashesResponse.prototype.addMatches = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mozilla.safebrowsing.ThreatMatch, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mozilla.safebrowsing.FindFullHashesResponse} returns this
 */
proto.mozilla.safebrowsing.FindFullHashesResponse.prototype.clearMatchesList = function() {
  return this.setMatchesList([]);
};


/**
 * optional Duration minimum_wait_duration = 2;
 * @return {?proto.mozilla.safebrowsing.Duration}
 */
proto.mozilla.safebrowsing.FindFullHashesResponse.prototype.getMinimumWaitDuration = function() {
  return /** @type{?proto.mozilla.safebrowsing.Duration} */ (
    jspb.Message.getWrapperField(this, proto.mozilla.safebrowsing.Duration, 2));
};


/**
 * @param {?proto.mozilla.safebrowsing.Duration|undefined} value
 * @return {!proto.mozilla.safebrowsing.FindFullHashesResponse} returns this
*/
proto.mozilla.safebrowsing.FindFullHashesResponse.prototype.setMinimumWaitDuration = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mozilla.safebrowsing.FindFullHashesResponse} returns this
 */
proto.mozilla.safebrowsing.FindFullHashesResponse.prototype.clearMinimumWaitDuration = function() {
  return this.setMinimumWaitDuration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.FindFullHashesResponse.prototype.hasMinimumWaitDuration = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Duration negative_cache_duration = 3;
 * @return {?proto.mozilla.safebrowsing.Duration}
 */
proto.mozilla.safebrowsing.FindFullHashesResponse.prototype.getNegativeCacheDuration = function() {
  return /** @type{?proto.mozilla.safebrowsing.Duration} */ (
    jspb.Message.getWrapperField(this, proto.mozilla.safebrowsing.Duration, 3));
};


/**
 * @param {?proto.mozilla.safebrowsing.Duration|undefined} value
 * @return {!proto.mozilla.safebrowsing.FindFullHashesResponse} returns this
*/
proto.mozilla.safebrowsing.FindFullHashesResponse.prototype.setNegativeCacheDuration = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mozilla.safebrowsing.FindFullHashesResponse} returns this
 */
proto.mozilla.safebrowsing.FindFullHashesResponse.prototype.clearNegativeCacheDuration = function() {
  return this.setNegativeCacheDuration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.FindFullHashesResponse.prototype.hasNegativeCacheDuration = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mozilla.safebrowsing.ThreatHit.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mozilla.safebrowsing.ThreatHit.prototype.toObject = function(opt_includeInstance) {
  return proto.mozilla.safebrowsing.ThreatHit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mozilla.safebrowsing.ThreatHit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.ThreatHit.toObject = function(includeInstance, msg) {
  var f, obj = {
    threatType: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    platformType: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    entry: (f = msg.getEntry()) && proto.mozilla.safebrowsing.ThreatEntry.toObject(includeInstance, f),
    resourcesList: jspb.Message.toObjectList(msg.getResourcesList(),
    proto.mozilla.safebrowsing.ThreatHit.ThreatSource.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mozilla.safebrowsing.ThreatHit}
 */
proto.mozilla.safebrowsing.ThreatHit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mozilla.safebrowsing.ThreatHit;
  return proto.mozilla.safebrowsing.ThreatHit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mozilla.safebrowsing.ThreatHit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mozilla.safebrowsing.ThreatHit}
 */
proto.mozilla.safebrowsing.ThreatHit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.mozilla.safebrowsing.ThreatType} */ (reader.readEnum());
      msg.setThreatType(value);
      break;
    case 2:
      var value = /** @type {!proto.mozilla.safebrowsing.PlatformType} */ (reader.readEnum());
      msg.setPlatformType(value);
      break;
    case 3:
      var value = new proto.mozilla.safebrowsing.ThreatEntry;
      reader.readMessage(value,proto.mozilla.safebrowsing.ThreatEntry.deserializeBinaryFromReader);
      msg.setEntry(value);
      break;
    case 4:
      var value = new proto.mozilla.safebrowsing.ThreatHit.ThreatSource;
      reader.readMessage(value,proto.mozilla.safebrowsing.ThreatHit.ThreatSource.deserializeBinaryFromReader);
      msg.addResources(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mozilla.safebrowsing.ThreatHit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mozilla.safebrowsing.ThreatHit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mozilla.safebrowsing.ThreatHit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.ThreatHit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.mozilla.safebrowsing.ThreatType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {!proto.mozilla.safebrowsing.PlatformType} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getEntry();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.mozilla.safebrowsing.ThreatEntry.serializeBinaryToWriter
    );
  }
  f = message.getResourcesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.mozilla.safebrowsing.ThreatHit.ThreatSource.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.mozilla.safebrowsing.ThreatHit.ThreatSourceType = {
  THREAT_SOURCE_TYPE_UNSPECIFIED: 0,
  MATCHING_URL: 1,
  TAB_URL: 2,
  TAB_REDIRECT: 3
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mozilla.safebrowsing.ThreatHit.ThreatSource.prototype.toObject = function(opt_includeInstance) {
  return proto.mozilla.safebrowsing.ThreatHit.ThreatSource.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mozilla.safebrowsing.ThreatHit.ThreatSource} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.ThreatHit.ThreatSource.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    type: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    remoteIp: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    referrer: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mozilla.safebrowsing.ThreatHit.ThreatSource}
 */
proto.mozilla.safebrowsing.ThreatHit.ThreatSource.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mozilla.safebrowsing.ThreatHit.ThreatSource;
  return proto.mozilla.safebrowsing.ThreatHit.ThreatSource.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mozilla.safebrowsing.ThreatHit.ThreatSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mozilla.safebrowsing.ThreatHit.ThreatSource}
 */
proto.mozilla.safebrowsing.ThreatHit.ThreatSource.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 2:
      var value = /** @type {!proto.mozilla.safebrowsing.ThreatHit.ThreatSourceType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoteIp(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setReferrer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mozilla.safebrowsing.ThreatHit.ThreatSource.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mozilla.safebrowsing.ThreatHit.ThreatSource.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mozilla.safebrowsing.ThreatHit.ThreatSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.ThreatHit.ThreatSource.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {!proto.mozilla.safebrowsing.ThreatHit.ThreatSourceType} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string url = 1;
 * @return {string}
 */
proto.mozilla.safebrowsing.ThreatHit.ThreatSource.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mozilla.safebrowsing.ThreatHit.ThreatSource} returns this
 */
proto.mozilla.safebrowsing.ThreatHit.ThreatSource.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mozilla.safebrowsing.ThreatHit.ThreatSource} returns this
 */
proto.mozilla.safebrowsing.ThreatHit.ThreatSource.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.ThreatHit.ThreatSource.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ThreatSourceType type = 2;
 * @return {!proto.mozilla.safebrowsing.ThreatHit.ThreatSourceType}
 */
proto.mozilla.safebrowsing.ThreatHit.ThreatSource.prototype.getType = function() {
  return /** @type {!proto.mozilla.safebrowsing.ThreatHit.ThreatSourceType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.mozilla.safebrowsing.ThreatHit.ThreatSourceType} value
 * @return {!proto.mozilla.safebrowsing.ThreatHit.ThreatSource} returns this
 */
proto.mozilla.safebrowsing.ThreatHit.ThreatSource.prototype.setType = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mozilla.safebrowsing.ThreatHit.ThreatSource} returns this
 */
proto.mozilla.safebrowsing.ThreatHit.ThreatSource.prototype.clearType = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.ThreatHit.ThreatSource.prototype.hasType = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string remote_ip = 3;
 * @return {string}
 */
proto.mozilla.safebrowsing.ThreatHit.ThreatSource.prototype.getRemoteIp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.mozilla.safebrowsing.ThreatHit.ThreatSource} returns this
 */
proto.mozilla.safebrowsing.ThreatHit.ThreatSource.prototype.setRemoteIp = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mozilla.safebrowsing.ThreatHit.ThreatSource} returns this
 */
proto.mozilla.safebrowsing.ThreatHit.ThreatSource.prototype.clearRemoteIp = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.ThreatHit.ThreatSource.prototype.hasRemoteIp = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string referrer = 4;
 * @return {string}
 */
proto.mozilla.safebrowsing.ThreatHit.ThreatSource.prototype.getReferrer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.mozilla.safebrowsing.ThreatHit.ThreatSource} returns this
 */
proto.mozilla.safebrowsing.ThreatHit.ThreatSource.prototype.setReferrer = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mozilla.safebrowsing.ThreatHit.ThreatSource} returns this
 */
proto.mozilla.safebrowsing.ThreatHit.ThreatSource.prototype.clearReferrer = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.ThreatHit.ThreatSource.prototype.hasReferrer = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ThreatType threat_type = 1;
 * @return {!proto.mozilla.safebrowsing.ThreatType}
 */
proto.mozilla.safebrowsing.ThreatHit.prototype.getThreatType = function() {
  return /** @type {!proto.mozilla.safebrowsing.ThreatType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.mozilla.safebrowsing.ThreatType} value
 * @return {!proto.mozilla.safebrowsing.ThreatHit} returns this
 */
proto.mozilla.safebrowsing.ThreatHit.prototype.setThreatType = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mozilla.safebrowsing.ThreatHit} returns this
 */
proto.mozilla.safebrowsing.ThreatHit.prototype.clearThreatType = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.ThreatHit.prototype.hasThreatType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PlatformType platform_type = 2;
 * @return {!proto.mozilla.safebrowsing.PlatformType}
 */
proto.mozilla.safebrowsing.ThreatHit.prototype.getPlatformType = function() {
  return /** @type {!proto.mozilla.safebrowsing.PlatformType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.mozilla.safebrowsing.PlatformType} value
 * @return {!proto.mozilla.safebrowsing.ThreatHit} returns this
 */
proto.mozilla.safebrowsing.ThreatHit.prototype.setPlatformType = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mozilla.safebrowsing.ThreatHit} returns this
 */
proto.mozilla.safebrowsing.ThreatHit.prototype.clearPlatformType = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.ThreatHit.prototype.hasPlatformType = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ThreatEntry entry = 3;
 * @return {?proto.mozilla.safebrowsing.ThreatEntry}
 */
proto.mozilla.safebrowsing.ThreatHit.prototype.getEntry = function() {
  return /** @type{?proto.mozilla.safebrowsing.ThreatEntry} */ (
    jspb.Message.getWrapperField(this, proto.mozilla.safebrowsing.ThreatEntry, 3));
};


/**
 * @param {?proto.mozilla.safebrowsing.ThreatEntry|undefined} value
 * @return {!proto.mozilla.safebrowsing.ThreatHit} returns this
*/
proto.mozilla.safebrowsing.ThreatHit.prototype.setEntry = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mozilla.safebrowsing.ThreatHit} returns this
 */
proto.mozilla.safebrowsing.ThreatHit.prototype.clearEntry = function() {
  return this.setEntry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.ThreatHit.prototype.hasEntry = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated ThreatSource resources = 4;
 * @return {!Array<!proto.mozilla.safebrowsing.ThreatHit.ThreatSource>}
 */
proto.mozilla.safebrowsing.ThreatHit.prototype.getResourcesList = function() {
  return /** @type{!Array<!proto.mozilla.safebrowsing.ThreatHit.ThreatSource>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mozilla.safebrowsing.ThreatHit.ThreatSource, 4));
};


/**
 * @param {!Array<!proto.mozilla.safebrowsing.ThreatHit.ThreatSource>} value
 * @return {!proto.mozilla.safebrowsing.ThreatHit} returns this
*/
proto.mozilla.safebrowsing.ThreatHit.prototype.setResourcesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.mozilla.safebrowsing.ThreatHit.ThreatSource=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mozilla.safebrowsing.ThreatHit.ThreatSource}
 */
proto.mozilla.safebrowsing.ThreatHit.prototype.addResources = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.mozilla.safebrowsing.ThreatHit.ThreatSource, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mozilla.safebrowsing.ThreatHit} returns this
 */
proto.mozilla.safebrowsing.ThreatHit.prototype.clearResourcesList = function() {
  return this.setResourcesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mozilla.safebrowsing.ClientInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.mozilla.safebrowsing.ClientInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mozilla.safebrowsing.ClientInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.ClientInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    clientVersion: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mozilla.safebrowsing.ClientInfo}
 */
proto.mozilla.safebrowsing.ClientInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mozilla.safebrowsing.ClientInfo;
  return proto.mozilla.safebrowsing.ClientInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mozilla.safebrowsing.ClientInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mozilla.safebrowsing.ClientInfo}
 */
proto.mozilla.safebrowsing.ClientInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mozilla.safebrowsing.ClientInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mozilla.safebrowsing.ClientInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mozilla.safebrowsing.ClientInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.ClientInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string client_id = 1;
 * @return {string}
 */
proto.mozilla.safebrowsing.ClientInfo.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mozilla.safebrowsing.ClientInfo} returns this
 */
proto.mozilla.safebrowsing.ClientInfo.prototype.setClientId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mozilla.safebrowsing.ClientInfo} returns this
 */
proto.mozilla.safebrowsing.ClientInfo.prototype.clearClientId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.ClientInfo.prototype.hasClientId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string client_version = 2;
 * @return {string}
 */
proto.mozilla.safebrowsing.ClientInfo.prototype.getClientVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mozilla.safebrowsing.ClientInfo} returns this
 */
proto.mozilla.safebrowsing.ClientInfo.prototype.setClientVersion = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mozilla.safebrowsing.ClientInfo} returns this
 */
proto.mozilla.safebrowsing.ClientInfo.prototype.clearClientVersion = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.ClientInfo.prototype.hasClientVersion = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mozilla.safebrowsing.ChromeClientInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.mozilla.safebrowsing.ChromeClientInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mozilla.safebrowsing.ChromeClientInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.ChromeClientInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    reportingPopulation: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mozilla.safebrowsing.ChromeClientInfo}
 */
proto.mozilla.safebrowsing.ChromeClientInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mozilla.safebrowsing.ChromeClientInfo;
  return proto.mozilla.safebrowsing.ChromeClientInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mozilla.safebrowsing.ChromeClientInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mozilla.safebrowsing.ChromeClientInfo}
 */
proto.mozilla.safebrowsing.ChromeClientInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.mozilla.safebrowsing.ChromeClientInfo.SafeBrowsingReportingPopulation} */ (reader.readEnum());
      msg.setReportingPopulation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mozilla.safebrowsing.ChromeClientInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mozilla.safebrowsing.ChromeClientInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mozilla.safebrowsing.ChromeClientInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.ChromeClientInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.mozilla.safebrowsing.ChromeClientInfo.SafeBrowsingReportingPopulation} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.mozilla.safebrowsing.ChromeClientInfo.SafeBrowsingReportingPopulation = {
  UNSPECIFIED: 0,
  OPT_OUT: 1,
  EXTENDED: 2,
  SCOUT: 3
};

/**
 * optional SafeBrowsingReportingPopulation reporting_population = 1;
 * @return {!proto.mozilla.safebrowsing.ChromeClientInfo.SafeBrowsingReportingPopulation}
 */
proto.mozilla.safebrowsing.ChromeClientInfo.prototype.getReportingPopulation = function() {
  return /** @type {!proto.mozilla.safebrowsing.ChromeClientInfo.SafeBrowsingReportingPopulation} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.mozilla.safebrowsing.ChromeClientInfo.SafeBrowsingReportingPopulation} value
 * @return {!proto.mozilla.safebrowsing.ChromeClientInfo} returns this
 */
proto.mozilla.safebrowsing.ChromeClientInfo.prototype.setReportingPopulation = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mozilla.safebrowsing.ChromeClientInfo} returns this
 */
proto.mozilla.safebrowsing.ChromeClientInfo.prototype.clearReportingPopulation = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.ChromeClientInfo.prototype.hasReportingPopulation = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mozilla.safebrowsing.Checksum.prototype.toObject = function(opt_includeInstance) {
  return proto.mozilla.safebrowsing.Checksum.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mozilla.safebrowsing.Checksum} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.Checksum.toObject = function(includeInstance, msg) {
  var f, obj = {
    sha256: msg.getSha256_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mozilla.safebrowsing.Checksum}
 */
proto.mozilla.safebrowsing.Checksum.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mozilla.safebrowsing.Checksum;
  return proto.mozilla.safebrowsing.Checksum.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mozilla.safebrowsing.Checksum} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mozilla.safebrowsing.Checksum}
 */
proto.mozilla.safebrowsing.Checksum.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSha256(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mozilla.safebrowsing.Checksum.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mozilla.safebrowsing.Checksum.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mozilla.safebrowsing.Checksum} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.Checksum.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes sha256 = 1;
 * @return {!(string|Uint8Array)}
 */
proto.mozilla.safebrowsing.Checksum.prototype.getSha256 = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes sha256 = 1;
 * This is a type-conversion wrapper around `getSha256()`
 * @return {string}
 */
proto.mozilla.safebrowsing.Checksum.prototype.getSha256_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSha256()));
};


/**
 * optional bytes sha256 = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSha256()`
 * @return {!Uint8Array}
 */
proto.mozilla.safebrowsing.Checksum.prototype.getSha256_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSha256()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.mozilla.safebrowsing.Checksum} returns this
 */
proto.mozilla.safebrowsing.Checksum.prototype.setSha256 = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mozilla.safebrowsing.Checksum} returns this
 */
proto.mozilla.safebrowsing.Checksum.prototype.clearSha256 = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.Checksum.prototype.hasSha256 = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mozilla.safebrowsing.ThreatEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.mozilla.safebrowsing.ThreatEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mozilla.safebrowsing.ThreatEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.ThreatEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    hash: msg.getHash_asB64(),
    url: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mozilla.safebrowsing.ThreatEntry}
 */
proto.mozilla.safebrowsing.ThreatEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mozilla.safebrowsing.ThreatEntry;
  return proto.mozilla.safebrowsing.ThreatEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mozilla.safebrowsing.ThreatEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mozilla.safebrowsing.ThreatEntry}
 */
proto.mozilla.safebrowsing.ThreatEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mozilla.safebrowsing.ThreatEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mozilla.safebrowsing.ThreatEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mozilla.safebrowsing.ThreatEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.ThreatEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bytes hash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.mozilla.safebrowsing.ThreatEntry.prototype.getHash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes hash = 1;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.mozilla.safebrowsing.ThreatEntry.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.mozilla.safebrowsing.ThreatEntry.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.mozilla.safebrowsing.ThreatEntry} returns this
 */
proto.mozilla.safebrowsing.ThreatEntry.prototype.setHash = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mozilla.safebrowsing.ThreatEntry} returns this
 */
proto.mozilla.safebrowsing.ThreatEntry.prototype.clearHash = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.ThreatEntry.prototype.hasHash = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string url = 2;
 * @return {string}
 */
proto.mozilla.safebrowsing.ThreatEntry.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mozilla.safebrowsing.ThreatEntry} returns this
 */
proto.mozilla.safebrowsing.ThreatEntry.prototype.setUrl = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mozilla.safebrowsing.ThreatEntry} returns this
 */
proto.mozilla.safebrowsing.ThreatEntry.prototype.clearUrl = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.ThreatEntry.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mozilla.safebrowsing.ThreatEntrySet.prototype.toObject = function(opt_includeInstance) {
  return proto.mozilla.safebrowsing.ThreatEntrySet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mozilla.safebrowsing.ThreatEntrySet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.ThreatEntrySet.toObject = function(includeInstance, msg) {
  var f, obj = {
    compressionType: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    rawHashes: (f = msg.getRawHashes()) && proto.mozilla.safebrowsing.RawHashes.toObject(includeInstance, f),
    rawIndices: (f = msg.getRawIndices()) && proto.mozilla.safebrowsing.RawIndices.toObject(includeInstance, f),
    riceHashes: (f = msg.getRiceHashes()) && proto.mozilla.safebrowsing.RiceDeltaEncoding.toObject(includeInstance, f),
    riceIndices: (f = msg.getRiceIndices()) && proto.mozilla.safebrowsing.RiceDeltaEncoding.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mozilla.safebrowsing.ThreatEntrySet}
 */
proto.mozilla.safebrowsing.ThreatEntrySet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mozilla.safebrowsing.ThreatEntrySet;
  return proto.mozilla.safebrowsing.ThreatEntrySet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mozilla.safebrowsing.ThreatEntrySet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mozilla.safebrowsing.ThreatEntrySet}
 */
proto.mozilla.safebrowsing.ThreatEntrySet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.mozilla.safebrowsing.CompressionType} */ (reader.readEnum());
      msg.setCompressionType(value);
      break;
    case 2:
      var value = new proto.mozilla.safebrowsing.RawHashes;
      reader.readMessage(value,proto.mozilla.safebrowsing.RawHashes.deserializeBinaryFromReader);
      msg.setRawHashes(value);
      break;
    case 3:
      var value = new proto.mozilla.safebrowsing.RawIndices;
      reader.readMessage(value,proto.mozilla.safebrowsing.RawIndices.deserializeBinaryFromReader);
      msg.setRawIndices(value);
      break;
    case 4:
      var value = new proto.mozilla.safebrowsing.RiceDeltaEncoding;
      reader.readMessage(value,proto.mozilla.safebrowsing.RiceDeltaEncoding.deserializeBinaryFromReader);
      msg.setRiceHashes(value);
      break;
    case 5:
      var value = new proto.mozilla.safebrowsing.RiceDeltaEncoding;
      reader.readMessage(value,proto.mozilla.safebrowsing.RiceDeltaEncoding.deserializeBinaryFromReader);
      msg.setRiceIndices(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mozilla.safebrowsing.ThreatEntrySet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mozilla.safebrowsing.ThreatEntrySet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mozilla.safebrowsing.ThreatEntrySet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.ThreatEntrySet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.mozilla.safebrowsing.CompressionType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getRawHashes();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mozilla.safebrowsing.RawHashes.serializeBinaryToWriter
    );
  }
  f = message.getRawIndices();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.mozilla.safebrowsing.RawIndices.serializeBinaryToWriter
    );
  }
  f = message.getRiceHashes();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.mozilla.safebrowsing.RiceDeltaEncoding.serializeBinaryToWriter
    );
  }
  f = message.getRiceIndices();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.mozilla.safebrowsing.RiceDeltaEncoding.serializeBinaryToWriter
    );
  }
};


/**
 * optional CompressionType compression_type = 1;
 * @return {!proto.mozilla.safebrowsing.CompressionType}
 */
proto.mozilla.safebrowsing.ThreatEntrySet.prototype.getCompressionType = function() {
  return /** @type {!proto.mozilla.safebrowsing.CompressionType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.mozilla.safebrowsing.CompressionType} value
 * @return {!proto.mozilla.safebrowsing.ThreatEntrySet} returns this
 */
proto.mozilla.safebrowsing.ThreatEntrySet.prototype.setCompressionType = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mozilla.safebrowsing.ThreatEntrySet} returns this
 */
proto.mozilla.safebrowsing.ThreatEntrySet.prototype.clearCompressionType = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.ThreatEntrySet.prototype.hasCompressionType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RawHashes raw_hashes = 2;
 * @return {?proto.mozilla.safebrowsing.RawHashes}
 */
proto.mozilla.safebrowsing.ThreatEntrySet.prototype.getRawHashes = function() {
  return /** @type{?proto.mozilla.safebrowsing.RawHashes} */ (
    jspb.Message.getWrapperField(this, proto.mozilla.safebrowsing.RawHashes, 2));
};


/**
 * @param {?proto.mozilla.safebrowsing.RawHashes|undefined} value
 * @return {!proto.mozilla.safebrowsing.ThreatEntrySet} returns this
*/
proto.mozilla.safebrowsing.ThreatEntrySet.prototype.setRawHashes = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mozilla.safebrowsing.ThreatEntrySet} returns this
 */
proto.mozilla.safebrowsing.ThreatEntrySet.prototype.clearRawHashes = function() {
  return this.setRawHashes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.ThreatEntrySet.prototype.hasRawHashes = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RawIndices raw_indices = 3;
 * @return {?proto.mozilla.safebrowsing.RawIndices}
 */
proto.mozilla.safebrowsing.ThreatEntrySet.prototype.getRawIndices = function() {
  return /** @type{?proto.mozilla.safebrowsing.RawIndices} */ (
    jspb.Message.getWrapperField(this, proto.mozilla.safebrowsing.RawIndices, 3));
};


/**
 * @param {?proto.mozilla.safebrowsing.RawIndices|undefined} value
 * @return {!proto.mozilla.safebrowsing.ThreatEntrySet} returns this
*/
proto.mozilla.safebrowsing.ThreatEntrySet.prototype.setRawIndices = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mozilla.safebrowsing.ThreatEntrySet} returns this
 */
proto.mozilla.safebrowsing.ThreatEntrySet.prototype.clearRawIndices = function() {
  return this.setRawIndices(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.ThreatEntrySet.prototype.hasRawIndices = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional RiceDeltaEncoding rice_hashes = 4;
 * @return {?proto.mozilla.safebrowsing.RiceDeltaEncoding}
 */
proto.mozilla.safebrowsing.ThreatEntrySet.prototype.getRiceHashes = function() {
  return /** @type{?proto.mozilla.safebrowsing.RiceDeltaEncoding} */ (
    jspb.Message.getWrapperField(this, proto.mozilla.safebrowsing.RiceDeltaEncoding, 4));
};


/**
 * @param {?proto.mozilla.safebrowsing.RiceDeltaEncoding|undefined} value
 * @return {!proto.mozilla.safebrowsing.ThreatEntrySet} returns this
*/
proto.mozilla.safebrowsing.ThreatEntrySet.prototype.setRiceHashes = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mozilla.safebrowsing.ThreatEntrySet} returns this
 */
proto.mozilla.safebrowsing.ThreatEntrySet.prototype.clearRiceHashes = function() {
  return this.setRiceHashes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.ThreatEntrySet.prototype.hasRiceHashes = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional RiceDeltaEncoding rice_indices = 5;
 * @return {?proto.mozilla.safebrowsing.RiceDeltaEncoding}
 */
proto.mozilla.safebrowsing.ThreatEntrySet.prototype.getRiceIndices = function() {
  return /** @type{?proto.mozilla.safebrowsing.RiceDeltaEncoding} */ (
    jspb.Message.getWrapperField(this, proto.mozilla.safebrowsing.RiceDeltaEncoding, 5));
};


/**
 * @param {?proto.mozilla.safebrowsing.RiceDeltaEncoding|undefined} value
 * @return {!proto.mozilla.safebrowsing.ThreatEntrySet} returns this
*/
proto.mozilla.safebrowsing.ThreatEntrySet.prototype.setRiceIndices = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mozilla.safebrowsing.ThreatEntrySet} returns this
 */
proto.mozilla.safebrowsing.ThreatEntrySet.prototype.clearRiceIndices = function() {
  return this.setRiceIndices(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.ThreatEntrySet.prototype.hasRiceIndices = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mozilla.safebrowsing.RawIndices.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mozilla.safebrowsing.RawIndices.prototype.toObject = function(opt_includeInstance) {
  return proto.mozilla.safebrowsing.RawIndices.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mozilla.safebrowsing.RawIndices} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.RawIndices.toObject = function(includeInstance, msg) {
  var f, obj = {
    indicesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mozilla.safebrowsing.RawIndices}
 */
proto.mozilla.safebrowsing.RawIndices.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mozilla.safebrowsing.RawIndices;
  return proto.mozilla.safebrowsing.RawIndices.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mozilla.safebrowsing.RawIndices} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mozilla.safebrowsing.RawIndices}
 */
proto.mozilla.safebrowsing.RawIndices.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.addIndices(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mozilla.safebrowsing.RawIndices.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mozilla.safebrowsing.RawIndices.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mozilla.safebrowsing.RawIndices} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.RawIndices.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndicesList();
  if (f.length > 0) {
    writer.writeRepeatedInt32(
      1,
      f
    );
  }
};


/**
 * repeated int32 indices = 1;
 * @return {!Array<number>}
 */
proto.mozilla.safebrowsing.RawIndices.prototype.getIndicesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.mozilla.safebrowsing.RawIndices} returns this
 */
proto.mozilla.safebrowsing.RawIndices.prototype.setIndicesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.mozilla.safebrowsing.RawIndices} returns this
 */
proto.mozilla.safebrowsing.RawIndices.prototype.addIndices = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mozilla.safebrowsing.RawIndices} returns this
 */
proto.mozilla.safebrowsing.RawIndices.prototype.clearIndicesList = function() {
  return this.setIndicesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mozilla.safebrowsing.RawHashes.prototype.toObject = function(opt_includeInstance) {
  return proto.mozilla.safebrowsing.RawHashes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mozilla.safebrowsing.RawHashes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.RawHashes.toObject = function(includeInstance, msg) {
  var f, obj = {
    prefixSize: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    rawHashes: msg.getRawHashes_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mozilla.safebrowsing.RawHashes}
 */
proto.mozilla.safebrowsing.RawHashes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mozilla.safebrowsing.RawHashes;
  return proto.mozilla.safebrowsing.RawHashes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mozilla.safebrowsing.RawHashes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mozilla.safebrowsing.RawHashes}
 */
proto.mozilla.safebrowsing.RawHashes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPrefixSize(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRawHashes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mozilla.safebrowsing.RawHashes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mozilla.safebrowsing.RawHashes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mozilla.safebrowsing.RawHashes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.RawHashes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional int32 prefix_size = 1;
 * @return {number}
 */
proto.mozilla.safebrowsing.RawHashes.prototype.getPrefixSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mozilla.safebrowsing.RawHashes} returns this
 */
proto.mozilla.safebrowsing.RawHashes.prototype.setPrefixSize = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mozilla.safebrowsing.RawHashes} returns this
 */
proto.mozilla.safebrowsing.RawHashes.prototype.clearPrefixSize = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.RawHashes.prototype.hasPrefixSize = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes raw_hashes = 2;
 * @return {!(string|Uint8Array)}
 */
proto.mozilla.safebrowsing.RawHashes.prototype.getRawHashes = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes raw_hashes = 2;
 * This is a type-conversion wrapper around `getRawHashes()`
 * @return {string}
 */
proto.mozilla.safebrowsing.RawHashes.prototype.getRawHashes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getRawHashes()));
};


/**
 * optional bytes raw_hashes = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRawHashes()`
 * @return {!Uint8Array}
 */
proto.mozilla.safebrowsing.RawHashes.prototype.getRawHashes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getRawHashes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.mozilla.safebrowsing.RawHashes} returns this
 */
proto.mozilla.safebrowsing.RawHashes.prototype.setRawHashes = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mozilla.safebrowsing.RawHashes} returns this
 */
proto.mozilla.safebrowsing.RawHashes.prototype.clearRawHashes = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.RawHashes.prototype.hasRawHashes = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mozilla.safebrowsing.RiceDeltaEncoding.prototype.toObject = function(opt_includeInstance) {
  return proto.mozilla.safebrowsing.RiceDeltaEncoding.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mozilla.safebrowsing.RiceDeltaEncoding} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.RiceDeltaEncoding.toObject = function(includeInstance, msg) {
  var f, obj = {
    firstValue: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    riceParameter: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    numEntries: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    encodedData: msg.getEncodedData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mozilla.safebrowsing.RiceDeltaEncoding}
 */
proto.mozilla.safebrowsing.RiceDeltaEncoding.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mozilla.safebrowsing.RiceDeltaEncoding;
  return proto.mozilla.safebrowsing.RiceDeltaEncoding.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mozilla.safebrowsing.RiceDeltaEncoding} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mozilla.safebrowsing.RiceDeltaEncoding}
 */
proto.mozilla.safebrowsing.RiceDeltaEncoding.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFirstValue(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRiceParameter(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumEntries(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setEncodedData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mozilla.safebrowsing.RiceDeltaEncoding.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mozilla.safebrowsing.RiceDeltaEncoding.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mozilla.safebrowsing.RiceDeltaEncoding} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.RiceDeltaEncoding.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBytes(
      4,
      f
    );
  }
};


/**
 * optional int64 first_value = 1;
 * @return {number}
 */
proto.mozilla.safebrowsing.RiceDeltaEncoding.prototype.getFirstValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mozilla.safebrowsing.RiceDeltaEncoding} returns this
 */
proto.mozilla.safebrowsing.RiceDeltaEncoding.prototype.setFirstValue = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mozilla.safebrowsing.RiceDeltaEncoding} returns this
 */
proto.mozilla.safebrowsing.RiceDeltaEncoding.prototype.clearFirstValue = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.RiceDeltaEncoding.prototype.hasFirstValue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 rice_parameter = 2;
 * @return {number}
 */
proto.mozilla.safebrowsing.RiceDeltaEncoding.prototype.getRiceParameter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mozilla.safebrowsing.RiceDeltaEncoding} returns this
 */
proto.mozilla.safebrowsing.RiceDeltaEncoding.prototype.setRiceParameter = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mozilla.safebrowsing.RiceDeltaEncoding} returns this
 */
proto.mozilla.safebrowsing.RiceDeltaEncoding.prototype.clearRiceParameter = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.RiceDeltaEncoding.prototype.hasRiceParameter = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 num_entries = 3;
 * @return {number}
 */
proto.mozilla.safebrowsing.RiceDeltaEncoding.prototype.getNumEntries = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.mozilla.safebrowsing.RiceDeltaEncoding} returns this
 */
proto.mozilla.safebrowsing.RiceDeltaEncoding.prototype.setNumEntries = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mozilla.safebrowsing.RiceDeltaEncoding} returns this
 */
proto.mozilla.safebrowsing.RiceDeltaEncoding.prototype.clearNumEntries = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.RiceDeltaEncoding.prototype.hasNumEntries = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bytes encoded_data = 4;
 * @return {!(string|Uint8Array)}
 */
proto.mozilla.safebrowsing.RiceDeltaEncoding.prototype.getEncodedData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes encoded_data = 4;
 * This is a type-conversion wrapper around `getEncodedData()`
 * @return {string}
 */
proto.mozilla.safebrowsing.RiceDeltaEncoding.prototype.getEncodedData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getEncodedData()));
};


/**
 * optional bytes encoded_data = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getEncodedData()`
 * @return {!Uint8Array}
 */
proto.mozilla.safebrowsing.RiceDeltaEncoding.prototype.getEncodedData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getEncodedData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.mozilla.safebrowsing.RiceDeltaEncoding} returns this
 */
proto.mozilla.safebrowsing.RiceDeltaEncoding.prototype.setEncodedData = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mozilla.safebrowsing.RiceDeltaEncoding} returns this
 */
proto.mozilla.safebrowsing.RiceDeltaEncoding.prototype.clearEncodedData = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.RiceDeltaEncoding.prototype.hasEncodedData = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mozilla.safebrowsing.ThreatEntryMetadata.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mozilla.safebrowsing.ThreatEntryMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.mozilla.safebrowsing.ThreatEntryMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mozilla.safebrowsing.ThreatEntryMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.ThreatEntryMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    entriesList: jspb.Message.toObjectList(msg.getEntriesList(),
    proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mozilla.safebrowsing.ThreatEntryMetadata}
 */
proto.mozilla.safebrowsing.ThreatEntryMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mozilla.safebrowsing.ThreatEntryMetadata;
  return proto.mozilla.safebrowsing.ThreatEntryMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mozilla.safebrowsing.ThreatEntryMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mozilla.safebrowsing.ThreatEntryMetadata}
 */
proto.mozilla.safebrowsing.ThreatEntryMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry;
      reader.readMessage(value,proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry.deserializeBinaryFromReader);
      msg.addEntries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mozilla.safebrowsing.ThreatEntryMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mozilla.safebrowsing.ThreatEntryMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mozilla.safebrowsing.ThreatEntryMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.ThreatEntryMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: msg.getKey_asB64(),
    value: msg.getValue_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry}
 */
proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry;
  return proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry}
 */
proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional bytes key = 1;
 * @return {!(string|Uint8Array)}
 */
proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry.prototype.getKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes key = 1;
 * This is a type-conversion wrapper around `getKey()`
 * @return {string}
 */
proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry.prototype.getKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getKey()));
};


/**
 * optional bytes key = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getKey()`
 * @return {!Uint8Array}
 */
proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry.prototype.getKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getKey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry} returns this
 */
proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry.prototype.setKey = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry} returns this
 */
proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry.prototype.clearKey = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry.prototype.hasKey = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes value = 2;
 * @return {!(string|Uint8Array)}
 */
proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry.prototype.getValue = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes value = 2;
 * This is a type-conversion wrapper around `getValue()`
 * @return {string}
 */
proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry.prototype.getValue_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getValue()));
};


/**
 * optional bytes value = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getValue()`
 * @return {!Uint8Array}
 */
proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry.prototype.getValue_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getValue()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry} returns this
 */
proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry.prototype.setValue = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry} returns this
 */
proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry.prototype.clearValue = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated MetadataEntry entries = 1;
 * @return {!Array<!proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry>}
 */
proto.mozilla.safebrowsing.ThreatEntryMetadata.prototype.getEntriesList = function() {
  return /** @type{!Array<!proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry, 1));
};


/**
 * @param {!Array<!proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry>} value
 * @return {!proto.mozilla.safebrowsing.ThreatEntryMetadata} returns this
*/
proto.mozilla.safebrowsing.ThreatEntryMetadata.prototype.setEntriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry}
 */
proto.mozilla.safebrowsing.ThreatEntryMetadata.prototype.addEntries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mozilla.safebrowsing.ThreatEntryMetadata.MetadataEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mozilla.safebrowsing.ThreatEntryMetadata} returns this
 */
proto.mozilla.safebrowsing.ThreatEntryMetadata.prototype.clearEntriesList = function() {
  return this.setEntriesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mozilla.safebrowsing.ThreatListDescriptor.prototype.toObject = function(opt_includeInstance) {
  return proto.mozilla.safebrowsing.ThreatListDescriptor.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mozilla.safebrowsing.ThreatListDescriptor} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.ThreatListDescriptor.toObject = function(includeInstance, msg) {
  var f, obj = {
    threatType: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    platformType: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    threatEntryType: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mozilla.safebrowsing.ThreatListDescriptor}
 */
proto.mozilla.safebrowsing.ThreatListDescriptor.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mozilla.safebrowsing.ThreatListDescriptor;
  return proto.mozilla.safebrowsing.ThreatListDescriptor.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mozilla.safebrowsing.ThreatListDescriptor} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mozilla.safebrowsing.ThreatListDescriptor}
 */
proto.mozilla.safebrowsing.ThreatListDescriptor.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.mozilla.safebrowsing.ThreatType} */ (reader.readEnum());
      msg.setThreatType(value);
      break;
    case 2:
      var value = /** @type {!proto.mozilla.safebrowsing.PlatformType} */ (reader.readEnum());
      msg.setPlatformType(value);
      break;
    case 3:
      var value = /** @type {!proto.mozilla.safebrowsing.ThreatEntryType} */ (reader.readEnum());
      msg.setThreatEntryType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mozilla.safebrowsing.ThreatListDescriptor.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mozilla.safebrowsing.ThreatListDescriptor.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mozilla.safebrowsing.ThreatListDescriptor} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.ThreatListDescriptor.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.mozilla.safebrowsing.ThreatType} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {!proto.mozilla.safebrowsing.PlatformType} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {!proto.mozilla.safebrowsing.ThreatEntryType} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional ThreatType threat_type = 1;
 * @return {!proto.mozilla.safebrowsing.ThreatType}
 */
proto.mozilla.safebrowsing.ThreatListDescriptor.prototype.getThreatType = function() {
  return /** @type {!proto.mozilla.safebrowsing.ThreatType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.mozilla.safebrowsing.ThreatType} value
 * @return {!proto.mozilla.safebrowsing.ThreatListDescriptor} returns this
 */
proto.mozilla.safebrowsing.ThreatListDescriptor.prototype.setThreatType = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mozilla.safebrowsing.ThreatListDescriptor} returns this
 */
proto.mozilla.safebrowsing.ThreatListDescriptor.prototype.clearThreatType = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.ThreatListDescriptor.prototype.hasThreatType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PlatformType platform_type = 2;
 * @return {!proto.mozilla.safebrowsing.PlatformType}
 */
proto.mozilla.safebrowsing.ThreatListDescriptor.prototype.getPlatformType = function() {
  return /** @type {!proto.mozilla.safebrowsing.PlatformType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.mozilla.safebrowsing.PlatformType} value
 * @return {!proto.mozilla.safebrowsing.ThreatListDescriptor} returns this
 */
proto.mozilla.safebrowsing.ThreatListDescriptor.prototype.setPlatformType = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mozilla.safebrowsing.ThreatListDescriptor} returns this
 */
proto.mozilla.safebrowsing.ThreatListDescriptor.prototype.clearPlatformType = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.ThreatListDescriptor.prototype.hasPlatformType = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ThreatEntryType threat_entry_type = 3;
 * @return {!proto.mozilla.safebrowsing.ThreatEntryType}
 */
proto.mozilla.safebrowsing.ThreatListDescriptor.prototype.getThreatEntryType = function() {
  return /** @type {!proto.mozilla.safebrowsing.ThreatEntryType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.mozilla.safebrowsing.ThreatEntryType} value
 * @return {!proto.mozilla.safebrowsing.ThreatListDescriptor} returns this
 */
proto.mozilla.safebrowsing.ThreatListDescriptor.prototype.setThreatEntryType = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mozilla.safebrowsing.ThreatListDescriptor} returns this
 */
proto.mozilla.safebrowsing.ThreatListDescriptor.prototype.clearThreatEntryType = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.ThreatListDescriptor.prototype.hasThreatEntryType = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mozilla.safebrowsing.ListThreatListsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mozilla.safebrowsing.ListThreatListsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mozilla.safebrowsing.ListThreatListsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mozilla.safebrowsing.ListThreatListsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.ListThreatListsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    threatListsList: jspb.Message.toObjectList(msg.getThreatListsList(),
    proto.mozilla.safebrowsing.ThreatListDescriptor.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mozilla.safebrowsing.ListThreatListsResponse}
 */
proto.mozilla.safebrowsing.ListThreatListsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mozilla.safebrowsing.ListThreatListsResponse;
  return proto.mozilla.safebrowsing.ListThreatListsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mozilla.safebrowsing.ListThreatListsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mozilla.safebrowsing.ListThreatListsResponse}
 */
proto.mozilla.safebrowsing.ListThreatListsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mozilla.safebrowsing.ThreatListDescriptor;
      reader.readMessage(value,proto.mozilla.safebrowsing.ThreatListDescriptor.deserializeBinaryFromReader);
      msg.addThreatLists(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mozilla.safebrowsing.ListThreatListsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mozilla.safebrowsing.ListThreatListsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mozilla.safebrowsing.ListThreatListsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.ListThreatListsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getThreatListsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mozilla.safebrowsing.ThreatListDescriptor.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ThreatListDescriptor threat_lists = 1;
 * @return {!Array<!proto.mozilla.safebrowsing.ThreatListDescriptor>}
 */
proto.mozilla.safebrowsing.ListThreatListsResponse.prototype.getThreatListsList = function() {
  return /** @type{!Array<!proto.mozilla.safebrowsing.ThreatListDescriptor>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mozilla.safebrowsing.ThreatListDescriptor, 1));
};


/**
 * @param {!Array<!proto.mozilla.safebrowsing.ThreatListDescriptor>} value
 * @return {!proto.mozilla.safebrowsing.ListThreatListsResponse} returns this
*/
proto.mozilla.safebrowsing.ListThreatListsResponse.prototype.setThreatListsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mozilla.safebrowsing.ThreatListDescriptor=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mozilla.safebrowsing.ThreatListDescriptor}
 */
proto.mozilla.safebrowsing.ListThreatListsResponse.prototype.addThreatLists = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mozilla.safebrowsing.ThreatListDescriptor, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mozilla.safebrowsing.ListThreatListsResponse} returns this
 */
proto.mozilla.safebrowsing.ListThreatListsResponse.prototype.clearThreatListsList = function() {
  return this.setThreatListsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mozilla.safebrowsing.Duration.prototype.toObject = function(opt_includeInstance) {
  return proto.mozilla.safebrowsing.Duration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mozilla.safebrowsing.Duration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.Duration.toObject = function(includeInstance, msg) {
  var f, obj = {
    seconds: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    nanos: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mozilla.safebrowsing.Duration}
 */
proto.mozilla.safebrowsing.Duration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mozilla.safebrowsing.Duration;
  return proto.mozilla.safebrowsing.Duration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mozilla.safebrowsing.Duration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mozilla.safebrowsing.Duration}
 */
proto.mozilla.safebrowsing.Duration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSeconds(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNanos(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mozilla.safebrowsing.Duration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mozilla.safebrowsing.Duration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mozilla.safebrowsing.Duration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mozilla.safebrowsing.Duration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int64 seconds = 1;
 * @return {number}
 */
proto.mozilla.safebrowsing.Duration.prototype.getSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mozilla.safebrowsing.Duration} returns this
 */
proto.mozilla.safebrowsing.Duration.prototype.setSeconds = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mozilla.safebrowsing.Duration} returns this
 */
proto.mozilla.safebrowsing.Duration.prototype.clearSeconds = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.Duration.prototype.hasSeconds = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 nanos = 2;
 * @return {number}
 */
proto.mozilla.safebrowsing.Duration.prototype.getNanos = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mozilla.safebrowsing.Duration} returns this
 */
proto.mozilla.safebrowsing.Duration.prototype.setNanos = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mozilla.safebrowsing.Duration} returns this
 */
proto.mozilla.safebrowsing.Duration.prototype.clearNanos = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mozilla.safebrowsing.Duration.prototype.hasNanos = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * @enum {number}
 */
proto.mozilla.safebrowsing.ThreatType = {
  THREAT_TYPE_UNSPECIFIED: 0,
  MALWARE_THREAT: 1,
  SOCIAL_ENGINEERING_PUBLIC: 2,
  UNWANTED_SOFTWARE: 3,
  POTENTIALLY_HARMFUL_APPLICATION: 4,
  SOCIAL_ENGINEERING: 5,
  API_ABUSE: 6,
  MALICIOUS_BINARY: 7,
  CSD_WHITELIST: 8,
  CSD_DOWNLOAD_WHITELIST: 9,
  CLIENT_INCIDENT: 10,
  SUBRESOURCE_FILTER: 13
};

/**
 * @enum {number}
 */
proto.mozilla.safebrowsing.PlatformType = {
  PLATFORM_TYPE_UNSPECIFIED: 0,
  WINDOWS_PLATFORM: 1,
  LINUX_PLATFORM: 2,
  ANDROID_PLATFORM: 3,
  OSX_PLATFORM: 4,
  IOS_PLATFORM: 5,
  ANY_PLATFORM: 6,
  ALL_PLATFORMS: 7,
  CHROME_PLATFORM: 8
};

/**
 * @enum {number}
 */
proto.mozilla.safebrowsing.CompressionType = {
  COMPRESSION_TYPE_UNSPECIFIED: 0,
  RAW: 1,
  RICE: 2
};

/**
 * @enum {number}
 */
proto.mozilla.safebrowsing.ThreatEntryType = {
  THREAT_ENTRY_TYPE_UNSPECIFIED: 0,
  URL: 1,
  EXECUTABLE: 2,
  IP_RANGE: 3,
  CHROME_EXTENSION: 4,
  FILENAME: 5,
  CERT: 6
};

goog.object.extend(exports, proto.mozilla.safebrowsing);
